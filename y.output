Grammar

    0 $accept: start $end

    1 start: statements

    2 statements: statement
    3           | statements statement

    4 statement: rtype
    5          | itype
    6          | jtype
    7          | label

    8 label: ID COLON

    9 rtype: ADD REG COMMA REG COMMA REG
   10      | SUB REG COMMA REG COMMA REG
   11      | AND REG COMMA REG COMMA REG
   12      | OR REG COMMA REG COMMA REG
   13      | NOR REG COMMA REG COMMA REG
   14      | SLL REG COMMA REG COMMA INT
   15      | SRL REG COMMA REG COMMA INT

   16 itype: ADDI REG COMMA REG COMMA INT
   17      | SUBI REG COMMA REG COMMA INT
   18      | ANDI REG COMMA REG COMMA INT
   19      | ORI REG COMMA REG COMMA INT
   20      | LW REG COMMA INT LPAREN REG RPAREN
   21      | SW REG COMMA INT LPAREN REG RPAREN
   22      | BEQ REG COMMA REG COMMA ID
   23      | BNEQ REG COMMA REG COMMA ID
   24      | BEQ REG COMMA REG COMMA INT
   25      | BNEQ REG COMMA REG COMMA INT

   26 jtype: JMP ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 9
ADDI (259) 16
SUB (260) 10
SUBI (261) 17
AND (262) 11
ANDI (263) 18
OR (264) 12
ORI (265) 19
SLL (266) 14
SRL (267) 15
NOR (268) 13
SW (269) 21
LW (270) 20
BEQ (271) 22 24
BNEQ (272) 23 25
JMP (273) 26
COLON (274) 8
COMMA (275) 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
LPAREN (276) 20 21
RPAREN (277) 20 21
REG (278) 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
INT (279) 14 15 16 17 18 19 20 21 24 25
ID (280) 8 22 23 26


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
start (27)
    on left: 1, on right: 0
statements (28)
    on left: 2 3, on right: 1 3
statement (29)
    on left: 4 5 6 7, on right: 2 3
label (30)
    on left: 8, on right: 7
rtype (31)
    on left: 9 10 11 12 13 14 15, on right: 4
itype (32)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 5
jtype (33)
    on left: 26, on right: 6


state 0

    0 $accept: . start $end

    ADD   shift, and go to state 1
    ADDI  shift, and go to state 2
    SUB   shift, and go to state 3
    SUBI  shift, and go to state 4
    AND   shift, and go to state 5
    ANDI  shift, and go to state 6
    OR    shift, and go to state 7
    ORI   shift, and go to state 8
    SLL   shift, and go to state 9
    SRL   shift, and go to state 10
    NOR   shift, and go to state 11
    SW    shift, and go to state 12
    LW    shift, and go to state 13
    BEQ   shift, and go to state 14
    BNEQ  shift, and go to state 15
    JMP   shift, and go to state 16
    ID    shift, and go to state 17

    start       go to state 18
    statements  go to state 19
    statement   go to state 20
    label       go to state 21
    rtype       go to state 22
    itype       go to state 23
    jtype       go to state 24


state 1

    9 rtype: ADD . REG COMMA REG COMMA REG

    REG  shift, and go to state 25


state 2

   16 itype: ADDI . REG COMMA REG COMMA INT

    REG  shift, and go to state 26


state 3

   10 rtype: SUB . REG COMMA REG COMMA REG

    REG  shift, and go to state 27


state 4

   17 itype: SUBI . REG COMMA REG COMMA INT

    REG  shift, and go to state 28


state 5

   11 rtype: AND . REG COMMA REG COMMA REG

    REG  shift, and go to state 29


state 6

   18 itype: ANDI . REG COMMA REG COMMA INT

    REG  shift, and go to state 30


state 7

   12 rtype: OR . REG COMMA REG COMMA REG

    REG  shift, and go to state 31


state 8

   19 itype: ORI . REG COMMA REG COMMA INT

    REG  shift, and go to state 32


state 9

   14 rtype: SLL . REG COMMA REG COMMA INT

    REG  shift, and go to state 33


state 10

   15 rtype: SRL . REG COMMA REG COMMA INT

    REG  shift, and go to state 34


state 11

   13 rtype: NOR . REG COMMA REG COMMA REG

    REG  shift, and go to state 35


state 12

   21 itype: SW . REG COMMA INT LPAREN REG RPAREN

    REG  shift, and go to state 36


state 13

   20 itype: LW . REG COMMA INT LPAREN REG RPAREN

    REG  shift, and go to state 37


state 14

   22 itype: BEQ . REG COMMA REG COMMA ID
   24      | BEQ . REG COMMA REG COMMA INT

    REG  shift, and go to state 38


state 15

   23 itype: BNEQ . REG COMMA REG COMMA ID
   25      | BNEQ . REG COMMA REG COMMA INT

    REG  shift, and go to state 39


state 16

   26 jtype: JMP . ID

    ID  shift, and go to state 40


state 17

    8 label: ID . COLON

    COLON  shift, and go to state 41


state 18

    0 $accept: start . $end

    $end  shift, and go to state 42


state 19

    1 start: statements .
    3 statements: statements . statement

    ADD   shift, and go to state 1
    ADDI  shift, and go to state 2
    SUB   shift, and go to state 3
    SUBI  shift, and go to state 4
    AND   shift, and go to state 5
    ANDI  shift, and go to state 6
    OR    shift, and go to state 7
    ORI   shift, and go to state 8
    SLL   shift, and go to state 9
    SRL   shift, and go to state 10
    NOR   shift, and go to state 11
    SW    shift, and go to state 12
    LW    shift, and go to state 13
    BEQ   shift, and go to state 14
    BNEQ  shift, and go to state 15
    JMP   shift, and go to state 16
    ID    shift, and go to state 17

    $default  reduce using rule 1 (start)

    statement  go to state 43
    label      go to state 21
    rtype      go to state 22
    itype      go to state 23
    jtype      go to state 24


state 20

    2 statements: statement .

    $default  reduce using rule 2 (statements)


state 21

    7 statement: label .

    $default  reduce using rule 7 (statement)


state 22

    4 statement: rtype .

    $default  reduce using rule 4 (statement)


state 23

    5 statement: itype .

    $default  reduce using rule 5 (statement)


state 24

    6 statement: jtype .

    $default  reduce using rule 6 (statement)


state 25

    9 rtype: ADD REG . COMMA REG COMMA REG

    COMMA  shift, and go to state 44


state 26

   16 itype: ADDI REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 45


state 27

   10 rtype: SUB REG . COMMA REG COMMA REG

    COMMA  shift, and go to state 46


state 28

   17 itype: SUBI REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 47


state 29

   11 rtype: AND REG . COMMA REG COMMA REG

    COMMA  shift, and go to state 48


state 30

   18 itype: ANDI REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 49


state 31

   12 rtype: OR REG . COMMA REG COMMA REG

    COMMA  shift, and go to state 50


state 32

   19 itype: ORI REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 51


state 33

   14 rtype: SLL REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 52


state 34

   15 rtype: SRL REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 53


state 35

   13 rtype: NOR REG . COMMA REG COMMA REG

    COMMA  shift, and go to state 54


state 36

   21 itype: SW REG . COMMA INT LPAREN REG RPAREN

    COMMA  shift, and go to state 55


state 37

   20 itype: LW REG . COMMA INT LPAREN REG RPAREN

    COMMA  shift, and go to state 56


state 38

   22 itype: BEQ REG . COMMA REG COMMA ID
   24      | BEQ REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 57


state 39

   23 itype: BNEQ REG . COMMA REG COMMA ID
   25      | BNEQ REG . COMMA REG COMMA INT

    COMMA  shift, and go to state 58


state 40

   26 jtype: JMP ID .

    $default  reduce using rule 26 (jtype)


state 41

    8 label: ID COLON .

    $default  reduce using rule 8 (label)


state 42

    0 $accept: start $end .

    $default  accept


state 43

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


state 44

    9 rtype: ADD REG COMMA . REG COMMA REG

    REG  shift, and go to state 59


state 45

   16 itype: ADDI REG COMMA . REG COMMA INT

    REG  shift, and go to state 60


state 46

   10 rtype: SUB REG COMMA . REG COMMA REG

    REG  shift, and go to state 61


state 47

   17 itype: SUBI REG COMMA . REG COMMA INT

    REG  shift, and go to state 62


state 48

   11 rtype: AND REG COMMA . REG COMMA REG

    REG  shift, and go to state 63


state 49

   18 itype: ANDI REG COMMA . REG COMMA INT

    REG  shift, and go to state 64


state 50

   12 rtype: OR REG COMMA . REG COMMA REG

    REG  shift, and go to state 65


state 51

   19 itype: ORI REG COMMA . REG COMMA INT

    REG  shift, and go to state 66


state 52

   14 rtype: SLL REG COMMA . REG COMMA INT

    REG  shift, and go to state 67


state 53

   15 rtype: SRL REG COMMA . REG COMMA INT

    REG  shift, and go to state 68


state 54

   13 rtype: NOR REG COMMA . REG COMMA REG

    REG  shift, and go to state 69


state 55

   21 itype: SW REG COMMA . INT LPAREN REG RPAREN

    INT  shift, and go to state 70


state 56

   20 itype: LW REG COMMA . INT LPAREN REG RPAREN

    INT  shift, and go to state 71


state 57

   22 itype: BEQ REG COMMA . REG COMMA ID
   24      | BEQ REG COMMA . REG COMMA INT

    REG  shift, and go to state 72


state 58

   23 itype: BNEQ REG COMMA . REG COMMA ID
   25      | BNEQ REG COMMA . REG COMMA INT

    REG  shift, and go to state 73


state 59

    9 rtype: ADD REG COMMA REG . COMMA REG

    COMMA  shift, and go to state 74


state 60

   16 itype: ADDI REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 75


state 61

   10 rtype: SUB REG COMMA REG . COMMA REG

    COMMA  shift, and go to state 76


state 62

   17 itype: SUBI REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 77


state 63

   11 rtype: AND REG COMMA REG . COMMA REG

    COMMA  shift, and go to state 78


state 64

   18 itype: ANDI REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 79


state 65

   12 rtype: OR REG COMMA REG . COMMA REG

    COMMA  shift, and go to state 80


state 66

   19 itype: ORI REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 81


state 67

   14 rtype: SLL REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 82


state 68

   15 rtype: SRL REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 83


state 69

   13 rtype: NOR REG COMMA REG . COMMA REG

    COMMA  shift, and go to state 84


state 70

   21 itype: SW REG COMMA INT . LPAREN REG RPAREN

    LPAREN  shift, and go to state 85


state 71

   20 itype: LW REG COMMA INT . LPAREN REG RPAREN

    LPAREN  shift, and go to state 86


state 72

   22 itype: BEQ REG COMMA REG . COMMA ID
   24      | BEQ REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 87


state 73

   23 itype: BNEQ REG COMMA REG . COMMA ID
   25      | BNEQ REG COMMA REG . COMMA INT

    COMMA  shift, and go to state 88


state 74

    9 rtype: ADD REG COMMA REG COMMA . REG

    REG  shift, and go to state 89


state 75

   16 itype: ADDI REG COMMA REG COMMA . INT

    INT  shift, and go to state 90


state 76

   10 rtype: SUB REG COMMA REG COMMA . REG

    REG  shift, and go to state 91


state 77

   17 itype: SUBI REG COMMA REG COMMA . INT

    INT  shift, and go to state 92


state 78

   11 rtype: AND REG COMMA REG COMMA . REG

    REG  shift, and go to state 93


state 79

   18 itype: ANDI REG COMMA REG COMMA . INT

    INT  shift, and go to state 94


state 80

   12 rtype: OR REG COMMA REG COMMA . REG

    REG  shift, and go to state 95


state 81

   19 itype: ORI REG COMMA REG COMMA . INT

    INT  shift, and go to state 96


state 82

   14 rtype: SLL REG COMMA REG COMMA . INT

    INT  shift, and go to state 97


state 83

   15 rtype: SRL REG COMMA REG COMMA . INT

    INT  shift, and go to state 98


state 84

   13 rtype: NOR REG COMMA REG COMMA . REG

    REG  shift, and go to state 99


state 85

   21 itype: SW REG COMMA INT LPAREN . REG RPAREN

    REG  shift, and go to state 100


state 86

   20 itype: LW REG COMMA INT LPAREN . REG RPAREN

    REG  shift, and go to state 101


state 87

   22 itype: BEQ REG COMMA REG COMMA . ID
   24      | BEQ REG COMMA REG COMMA . INT

    INT  shift, and go to state 102
    ID   shift, and go to state 103


state 88

   23 itype: BNEQ REG COMMA REG COMMA . ID
   25      | BNEQ REG COMMA REG COMMA . INT

    INT  shift, and go to state 104
    ID   shift, and go to state 105


state 89

    9 rtype: ADD REG COMMA REG COMMA REG .

    $default  reduce using rule 9 (rtype)


state 90

   16 itype: ADDI REG COMMA REG COMMA INT .

    $default  reduce using rule 16 (itype)


state 91

   10 rtype: SUB REG COMMA REG COMMA REG .

    $default  reduce using rule 10 (rtype)


state 92

   17 itype: SUBI REG COMMA REG COMMA INT .

    $default  reduce using rule 17 (itype)


state 93

   11 rtype: AND REG COMMA REG COMMA REG .

    $default  reduce using rule 11 (rtype)


state 94

   18 itype: ANDI REG COMMA REG COMMA INT .

    $default  reduce using rule 18 (itype)


state 95

   12 rtype: OR REG COMMA REG COMMA REG .

    $default  reduce using rule 12 (rtype)


state 96

   19 itype: ORI REG COMMA REG COMMA INT .

    $default  reduce using rule 19 (itype)


state 97

   14 rtype: SLL REG COMMA REG COMMA INT .

    $default  reduce using rule 14 (rtype)


state 98

   15 rtype: SRL REG COMMA REG COMMA INT .

    $default  reduce using rule 15 (rtype)


state 99

   13 rtype: NOR REG COMMA REG COMMA REG .

    $default  reduce using rule 13 (rtype)


state 100

   21 itype: SW REG COMMA INT LPAREN REG . RPAREN

    RPAREN  shift, and go to state 106


state 101

   20 itype: LW REG COMMA INT LPAREN REG . RPAREN

    RPAREN  shift, and go to state 107


state 102

   24 itype: BEQ REG COMMA REG COMMA INT .

    $default  reduce using rule 24 (itype)


state 103

   22 itype: BEQ REG COMMA REG COMMA ID .

    $default  reduce using rule 22 (itype)


state 104

   25 itype: BNEQ REG COMMA REG COMMA INT .

    $default  reduce using rule 25 (itype)


state 105

   23 itype: BNEQ REG COMMA REG COMMA ID .

    $default  reduce using rule 23 (itype)


state 106

   21 itype: SW REG COMMA INT LPAREN REG RPAREN .

    $default  reduce using rule 21 (itype)


state 107

   20 itype: LW REG COMMA INT LPAREN REG RPAREN .

    $default  reduce using rule 20 (itype)
